{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const storageKey = 'feedback-form-state';\nconst form = document.querySelector('.feedback-form');\n\nform.addEventListener('input', renderFormInput);\nform.addEventListener('submit', submitFormData);\n\n// ====================== Event listener functions ======================\n\nfunction renderFormInput(e) {\n    const email = e.currentTarget.elements.email.value.trim();\n    const message = e.currentTarget.elements.message.value.trim();\n\n    const dataToSave = {\n        email,\n        message\n    }\n\n    saveToLs(storageKey, dataToSave);\n}\n\nfunction submitFormData(e) {\n    e.preventDefault();\n\n    const data = loadFromLs(storageKey) || {};\n\n    if (data.email && data.message) {\n        console.log(data);\n        localStorage.removeItem(storageKey);\n        form.reset();\n    } else {\n        alert('Please, fill in both email and message fields before submitting');\n    }\n}\n\n// ====================== Local storage functions =======================\n\nfunction saveToLs(key, value) {\n    const archive = JSON.stringify(value);\n    localStorage.setItem(key, archive);\n}\n\nfunction loadFromLs(key) {\n    const retrievedData = localStorage.getItem(key);\n\n    try {\n        return JSON.parse(retrievedData);\n    } catch {\n        return retrievedData;\n    }\n}\n\nfunction restoreData() {\n    const { email, message } = loadFromLs(storageKey) || {};\n    \n    form.elements.email.value = email || '';\n    form.elements.message.value = message || '';\n}\n\nrestoreData();\n\n// ================== Setting placeholders ==================\n\nconst emailInput = document.querySelector('input[name=\"email\"]');\nconst messageTextarea = document.querySelector('textarea[name=\"message\"]');\n\nemailInput.addEventListener('focus', () => {\n    if (!emailInput.value.trim()) {\n        emailInput.setAttribute('placeholder', 'Type area');\n    }\n});\n\nemailInput.addEventListener('blur', () => {\n    emailInput.removeAttribute('placeholder');\n});\n\nmessageTextarea.addEventListener('focus', () => {\n    if (!messageTextarea.value.trim()) {\n        messageTextarea.setAttribute('placeholder', 'Type area');\n    }\n});\n\nmessageTextarea.addEventListener('blur', () => {\n    messageTextarea.removeAttribute('placeholder');\n});"],"names":["storageKey","form","renderFormInput","submitFormData","e","email","message","saveToLs","data","loadFromLs","key","value","archive","retrievedData","restoreData","emailInput","messageTextarea"],"mappings":"wFAAA,MAAMA,EAAa,sBACbC,EAAO,SAAS,cAAc,gBAAgB,EAEpDA,EAAK,iBAAiB,QAASC,CAAe,EAC9CD,EAAK,iBAAiB,SAAUE,CAAc,EAI9C,SAASD,EAAgBE,EAAG,CACxB,MAAMC,EAAQD,EAAE,cAAc,SAAS,MAAM,MAAM,OAC7CE,EAAUF,EAAE,cAAc,SAAS,QAAQ,MAAM,OAOvDG,EAASP,EALU,CACf,MAAAK,EACA,QAAAC,CACH,CAE8B,CACnC,CAEA,SAASH,EAAeC,EAAG,CACvBA,EAAE,eAAc,EAEhB,MAAMI,EAAOC,EAAWT,CAAU,GAAK,CAAA,EAEnCQ,EAAK,OAASA,EAAK,SACnB,QAAQ,IAAIA,CAAI,EAChB,aAAa,WAAWR,CAAU,EAClCC,EAAK,MAAK,GAEV,MAAM,iEAAiE,CAE/E,CAIA,SAASM,EAASG,EAAKC,EAAO,CAC1B,MAAMC,EAAU,KAAK,UAAUD,CAAK,EACpC,aAAa,QAAQD,EAAKE,CAAO,CACrC,CAEA,SAASH,EAAWC,EAAK,CACrB,MAAMG,EAAgB,aAAa,QAAQH,CAAG,EAE9C,GAAI,CACA,OAAO,KAAK,MAAMG,CAAa,CACvC,MAAY,CACJ,OAAOA,CACV,CACL,CAEA,SAASC,GAAc,CACnB,KAAM,CAAE,MAAAT,EAAO,QAAAC,CAAO,EAAKG,EAAWT,CAAU,GAAK,GAErDC,EAAK,SAAS,MAAM,MAAQI,GAAS,GACrCJ,EAAK,SAAS,QAAQ,MAAQK,GAAW,EAC7C,CAEAQ,IAIA,MAAMC,EAAa,SAAS,cAAc,qBAAqB,EACzDC,EAAkB,SAAS,cAAc,0BAA0B,EAEzED,EAAW,iBAAiB,QAAS,IAAM,CAClCA,EAAW,MAAM,QAClBA,EAAW,aAAa,cAAe,WAAW,CAE1D,CAAC,EAEDA,EAAW,iBAAiB,OAAQ,IAAM,CACtCA,EAAW,gBAAgB,aAAa,CAC5C,CAAC,EAEDC,EAAgB,iBAAiB,QAAS,IAAM,CACvCA,EAAgB,MAAM,QACvBA,EAAgB,aAAa,cAAe,WAAW,CAE/D,CAAC,EAEDA,EAAgB,iBAAiB,OAAQ,IAAM,CAC3CA,EAAgB,gBAAgB,aAAa,CACjD,CAAC"}